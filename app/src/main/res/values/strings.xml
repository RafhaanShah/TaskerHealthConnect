<resources>
    <string name="app_name">Tasker Health Connect</string>
    <string name="grant_permissions">Grant Permissions</string>
    <string name="app_ready">Permissions are granted and Health Connect is available. Open Tasker, and look for Tasker Health Connect inside Action -> Plugins</string>
    <string name="permissions_not_granted">Not all permissions have been granted, open the Health Connect app to grant permissions</string>
    <string name="health_connect_unavailable">Health connect is not installed or is unavailable, check for updates</string>
    <string name="health_connect_unavailable_or_permissions">Health Connect is unavailable or permissions are not granted</string>
    <string name="install">Install Health Connect</string>
    <string name="debug">Debug</string>
    <string name="done">Done</string>
    <string name="days">Days</string>
    <string name="days_description">Days back to fetch (0 = today only, 1 = from 00:00 yesterday)</string>
    <string name="record_type">Class of the type of Health Record</string>
    <string name="record_type_description">This must be a valid class from androidx.health.connect.client.records.* package, e.g. StepsRecord. Supports Tasker Variables.</string>
    <string name="from_time_milliseconds">From Time Epoch Milliseconds</string>
    <string name="from_time_milliseconds_description">The timestamp (in epoch milliseconds) to start fetching records from. Supports Tasker Variables.</string>
    <string name="aggregated_health_data">Aggregated Health Data</string>
    <string name="aggregated_health_data_description">Aggregated Health Data will be returned as a JSON array, each object in the array corresponds to 1 day of data. The fields of the object will contain specific data for that day. Fields will not be present if there is no data for that type for that day.</string>
    <string name="write_data">Write Data</string>
    <string name="health_data">Health Data</string>
    <string name="health_data_description">Health Data will be returned as a JSON array, each object in the array corresponds to record of data. The fields of the object will contain specific data for type of record.</string>
    <string name="record_ids">Record IDs</string>
    <string name="record_ids_description">The response will include a list of the record IDs inserted.</string>
    <string name="records_json">JSON Object or List of Objects to write</string>
    <string name="records_json_description">Provide a JSON object or array of records to write.
        Supports Tasker Variables. All fields that are not optional / nullable and don\'t have
        default values on the actual Class Constructor must be present, except for Metadata which
        will be set to a default value if missing. You can use unix millisecond timestamps for Instant / Date
        Time fields, like 1746646647993. Enum values should be the name of the enum exactly as a string, like "CELSIUS".
        The JSON Objects should be an exact representation of the Java / Kotlin Class Constructor fields.
        E.g. for BasalBodyTemperatureRecord:"\n{\n  \"time\": 1746646657868,\n  \"temperature\": {\n    \"value\": 38.0,\n    \"type\": \"CELSIUS\"\n  }\n}"</string>
    <string name="version">Version %s</string>
    <string name="check_updates">Check for updates</string>
</resources>
