plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.rafapps.taskerhealthconnect'
    compileSdk 36

    defaultConfig {
        applicationId "com.rafapps.taskerhealthconnect"
        minSdk 28 // Health Connect is only available in Android 9
        targetSdk 34
        versionCode 6
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("keystore/release.jks")
            storePassword resolveSecureProp("KEYSTORE_PASSWORD")
            keyAlias "release"
            keyPassword resolveSecureProp("KEYSTORE_PASSWORD")
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix = ".debug"
            debuggable true
            shrinkResources false
            minifyEnabled false
        }
        release {
            debuggable false
            shrinkResources true
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 17
        targetCompatibility 17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        buildConfig true
        viewBinding true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'androidx.core:core-ktx:1.16.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'

    implementation 'com.google.android.material:material:1.12.0'

    // https://developer.android.com/jetpack/androidx/releases/health-connect
    implementation "androidx.health.connect:connect-client:1.1.0-rc01"

    // https://tasker.joaoapps.com/pluginslibrary.html
    implementation 'com.joaomgcd:taskerpluginlibrary:0.4.10'

    // kotlinx.serialization = cannot auto generate for classes in other modules
    // gson = does not handle default values
    // moshi = refuses to work with androidx classes
    // klaxon = slower, more complicated for runtime class types
    // so use jackson https://github.com/FasterXML/jackson-module-kotlin
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.18.2"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.2"

    testImplementation 'junit:junit:4.13.2'

    // https://developer.android.com/health-and-fitness/guides/health-connect/test/unit-tests
    testImplementation 'androidx.health.connect:connect-testing:1.0.0-alpha03'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
}

def resolveSecureProp(name) {
    def keystorePropsFile = rootProject.file("keystore.properties")
    if (keystorePropsFile.exists()) {
        def keystoreProps = new Properties()
        keystoreProps.load(new FileInputStream(keystorePropsFile))
        return keystoreProps[name]
    }
    return System.getenv(name)
}
